#include "arduino_secrets.h"

/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/92258b0f-926e-46e2-a9ed-9f60fe5e89bb

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String calidadAire;
  CloudTemperatureSensor temperatura;
  CloudRelativeHumidity humedad;
  bool calidadAireBool;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
/*ZONA DE INCLUSIÓN DE LIBRERIAS*/
#include "thingProperties.h"

// ESP8266WiFi for esp8266 - Version: Latest
#include <ESP8266WiFi.h>

// WireData - Version: Latest
#include <Wire.h>

// LiquidCrystal I2C - Version: Latest
#include <LiquidCrystal_I2C.h>

// DHT sensor library - Version: Latest
#include <DHT.h>


#define LCD_I2C_ADDRESS 0x27                      //Direccion del modulo i2c del LCD         
#define LCD_DISP_COLS   16                        //Tamaño del LCD (Columnas)
#define LCD_DISP_ROWS   2                         //Tamaño del LCD (Filas)
#define DHTTYPE DHT11                             //Trabajamos con el DHT 11. 
#define DHTPIN 2                                  //Pin de conexión a Arduino para tomar la lectura (pwm).
#define gasSensor A0

LiquidCrystal_I2C lcd( LCD_I2C_ADDRESS, LCD_DISP_COLS, LCD_DISP_ROWS ); //Configuramos el LCD
DHT dht(DHTPIN, DHTTYPE);                         //Nombramos y configuramos el sensor para poder inicializarlo.

int gasLevel = 0;


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  dht.begin();                                  //Iniciamos el sensor.

  lcd.init();                                   //Iniciamos el lcd.
  lcd.backlight();
  lcd.setCursor (0, 0);
  lcd.print("                ");
  lcd.setCursor (0, 1);
  lcd.print("                ");
  lcd.setCursor (0, 0);
  lcd.print("    Monitor de");
  lcd.setCursor (0, 1);
  lcd.print("  temperatura   ");
  delay(5000);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  //lcd.clear();
  DHT11_Datos();
  delay(10000);
  //lcd.clear();
  MQ135_Datos();
  delay(10000);
}

void DHT11_Datos()
{
  humedad = dht.readHumidity();                   //Leemos humedad.
  temperatura = dht.readTemperature();            //Leemos temperatura.


  if (isnan(humedad) || isnan(temperatura))                       //Si alguna lectura es erronea...
  {
    lcd.print("Falla lectura del sensor DHT!");
    return;
  }

  lcd.clear();
  lcd.setCursor (0, 0);
  lcd.print("Temp: ");
  lcd.setCursor(7, 0);
  lcd.print(temperatura);
  lcd.setCursor (12, 0);
  lcd.print(" C");
  lcd.setCursor (0, 1);
  lcd.print("RH  : ");
  lcd.setCursor(7, 1);
  lcd.print(humedad);
  lcd.setCursor (12, 1);
  lcd.print("%");

  //Serial.println(humedad);
  //Serial.println(temperatura);
}

void MQ135_Datos()
{
  gasLevel = analogRead(gasSensor);

  if (gasLevel < 181)
  {
    calidadAire = "Buena Calidad!";
    calidadAireBool = true;
  }
  else if (gasLevel > 181 && gasLevel < 225)
  {
    calidadAire = "Pobre Calidad!";
    calidadAireBool = true;
  }
  else if (gasLevel > 225 && gasLevel < 300)
  {
    calidadAire = "Mala Calidad!";
    calidadAireBool = false;
  }
  else if (gasLevel > 300 && gasLevel < 350)
  {
    calidadAire = "Estas Muerto!";
    calidadAireBool = false;
  }

  lcd.clear();
  lcd.setCursor (0, 0);
  lcd.print("Calidad del aire");
  lcd.setCursor (0, 1);
  lcd.print(calidadAire);

}












